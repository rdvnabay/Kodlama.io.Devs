using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Persistence.Migrations
{
    public partial class AddSeedDataDeveloperTable : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 1);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 2);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 3);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 4);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 5);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 6);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 7);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 8);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 9);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 10);

            migrationBuilder.InsertData(
                table: "User",
                columns: new[] { "Id", "Discriminator", "Email", "FirstName", "LastName", "PasswordHash", "PasswordSalt", "Status" },
                values: new object[,]
                {
                    { 1, "Developer", "Dilhan86@hotmail.com", "Dilhan", "Çörekçi", new byte[] { 191, 152, 81, 208, 77, 245, 143, 249, 238, 247, 183, 125, 158, 105, 76, 129, 16, 207, 2, 79, 168, 24, 115, 251, 209, 177, 113, 136, 216, 109, 207, 226, 115, 61, 89, 113, 234, 147, 226, 98, 130, 244, 13, 210, 215, 134, 126, 134, 166, 204, 246, 141, 57, 99, 161, 229, 201, 175, 93, 149, 163, 156, 21, 78, 120, 133, 100, 42, 203, 202, 185, 219, 202, 193, 60, 134, 198, 61, 54, 252, 197, 160, 31, 146, 16, 20, 14, 35, 25, 231, 19, 72, 188, 123, 1, 189, 123, 135, 163, 119, 126, 235, 187, 158, 8, 15, 211, 140, 100, 204, 16, 223, 211, 13, 250, 45, 93, 22, 84, 160, 51, 142, 10, 134, 19, 60, 14, 229 }, new byte[] { 233, 183, 100, 16, 194, 9, 25, 105, 206, 226, 211, 6, 236, 81, 128, 214, 97, 82, 229, 5, 150, 232, 107, 57, 249, 106, 20, 146, 85, 150, 63, 48, 209, 165, 204, 90, 163, 186, 203, 138, 19, 16, 61, 76, 89, 42, 251, 109, 81, 43, 64, 252, 204, 164, 139, 222, 28, 136, 47, 132, 51, 95, 33, 106 }, false },
                    { 2, "Developer", "Haluk14@yahoo.com", "Haluk", "Çörekçi", new byte[] { 191, 152, 81, 208, 77, 245, 143, 249, 238, 247, 183, 125, 158, 105, 76, 129, 16, 207, 2, 79, 168, 24, 115, 251, 209, 177, 113, 136, 216, 109, 207, 226, 115, 61, 89, 113, 234, 147, 226, 98, 130, 244, 13, 210, 215, 134, 126, 134, 166, 204, 246, 141, 57, 99, 161, 229, 201, 175, 93, 149, 163, 156, 21, 78, 120, 133, 100, 42, 203, 202, 185, 219, 202, 193, 60, 134, 198, 61, 54, 252, 197, 160, 31, 146, 16, 20, 14, 35, 25, 231, 19, 72, 188, 123, 1, 189, 123, 135, 163, 119, 126, 235, 187, 158, 8, 15, 211, 140, 100, 204, 16, 223, 211, 13, 250, 45, 93, 22, 84, 160, 51, 142, 10, 134, 19, 60, 14, 229 }, new byte[] { 233, 183, 100, 16, 194, 9, 25, 105, 206, 226, 211, 6, 236, 81, 128, 214, 97, 82, 229, 5, 150, 232, 107, 57, 249, 106, 20, 146, 85, 150, 63, 48, 209, 165, 204, 90, 163, 186, 203, 138, 19, 16, 61, 76, 89, 42, 251, 109, 81, 43, 64, 252, 204, 164, 139, 222, 28, 136, 47, 132, 51, 95, 33, 106 }, false },
                    { 3, "Developer", "Umran.Mertoglu@gmail.com", "Ümran", "Mertoğlu", new byte[] { 191, 152, 81, 208, 77, 245, 143, 249, 238, 247, 183, 125, 158, 105, 76, 129, 16, 207, 2, 79, 168, 24, 115, 251, 209, 177, 113, 136, 216, 109, 207, 226, 115, 61, 89, 113, 234, 147, 226, 98, 130, 244, 13, 210, 215, 134, 126, 134, 166, 204, 246, 141, 57, 99, 161, 229, 201, 175, 93, 149, 163, 156, 21, 78, 120, 133, 100, 42, 203, 202, 185, 219, 202, 193, 60, 134, 198, 61, 54, 252, 197, 160, 31, 146, 16, 20, 14, 35, 25, 231, 19, 72, 188, 123, 1, 189, 123, 135, 163, 119, 126, 235, 187, 158, 8, 15, 211, 140, 100, 204, 16, 223, 211, 13, 250, 45, 93, 22, 84, 160, 51, 142, 10, 134, 19, 60, 14, 229 }, new byte[] { 233, 183, 100, 16, 194, 9, 25, 105, 206, 226, 211, 6, 236, 81, 128, 214, 97, 82, 229, 5, 150, 232, 107, 57, 249, 106, 20, 146, 85, 150, 63, 48, 209, 165, 204, 90, 163, 186, 203, 138, 19, 16, 61, 76, 89, 42, 251, 109, 81, 43, 64, 252, 204, 164, 139, 222, 28, 136, 47, 132, 51, 95, 33, 106 }, false },
                    { 4, "Developer", "Mukaddes.Tasci@yahoo.com", "Mukaddes", "Taşçı", new byte[] { 191, 152, 81, 208, 77, 245, 143, 249, 238, 247, 183, 125, 158, 105, 76, 129, 16, 207, 2, 79, 168, 24, 115, 251, 209, 177, 113, 136, 216, 109, 207, 226, 115, 61, 89, 113, 234, 147, 226, 98, 130, 244, 13, 210, 215, 134, 126, 134, 166, 204, 246, 141, 57, 99, 161, 229, 201, 175, 93, 149, 163, 156, 21, 78, 120, 133, 100, 42, 203, 202, 185, 219, 202, 193, 60, 134, 198, 61, 54, 252, 197, 160, 31, 146, 16, 20, 14, 35, 25, 231, 19, 72, 188, 123, 1, 189, 123, 135, 163, 119, 126, 235, 187, 158, 8, 15, 211, 140, 100, 204, 16, 223, 211, 13, 250, 45, 93, 22, 84, 160, 51, 142, 10, 134, 19, 60, 14, 229 }, new byte[] { 233, 183, 100, 16, 194, 9, 25, 105, 206, 226, 211, 6, 236, 81, 128, 214, 97, 82, 229, 5, 150, 232, 107, 57, 249, 106, 20, 146, 85, 150, 63, 48, 209, 165, 204, 90, 163, 186, 203, 138, 19, 16, 61, 76, 89, 42, 251, 109, 81, 43, 64, 252, 204, 164, 139, 222, 28, 136, 47, 132, 51, 95, 33, 106 }, true },
                    { 5, "Developer", "Kerim_Akman84@gmail.com", "Kerim", "Akman", new byte[] { 191, 152, 81, 208, 77, 245, 143, 249, 238, 247, 183, 125, 158, 105, 76, 129, 16, 207, 2, 79, 168, 24, 115, 251, 209, 177, 113, 136, 216, 109, 207, 226, 115, 61, 89, 113, 234, 147, 226, 98, 130, 244, 13, 210, 215, 134, 126, 134, 166, 204, 246, 141, 57, 99, 161, 229, 201, 175, 93, 149, 163, 156, 21, 78, 120, 133, 100, 42, 203, 202, 185, 219, 202, 193, 60, 134, 198, 61, 54, 252, 197, 160, 31, 146, 16, 20, 14, 35, 25, 231, 19, 72, 188, 123, 1, 189, 123, 135, 163, 119, 126, 235, 187, 158, 8, 15, 211, 140, 100, 204, 16, 223, 211, 13, 250, 45, 93, 22, 84, 160, 51, 142, 10, 134, 19, 60, 14, 229 }, new byte[] { 233, 183, 100, 16, 194, 9, 25, 105, 206, 226, 211, 6, 236, 81, 128, 214, 97, 82, 229, 5, 150, 232, 107, 57, 249, 106, 20, 146, 85, 150, 63, 48, 209, 165, 204, 90, 163, 186, 203, 138, 19, 16, 61, 76, 89, 42, 251, 109, 81, 43, 64, 252, 204, 164, 139, 222, 28, 136, 47, 132, 51, 95, 33, 106 }, false },
                    { 6, "Developer", "Duygu65@hotmail.com", "Duygu", "Elçiboğa", new byte[] { 191, 152, 81, 208, 77, 245, 143, 249, 238, 247, 183, 125, 158, 105, 76, 129, 16, 207, 2, 79, 168, 24, 115, 251, 209, 177, 113, 136, 216, 109, 207, 226, 115, 61, 89, 113, 234, 147, 226, 98, 130, 244, 13, 210, 215, 134, 126, 134, 166, 204, 246, 141, 57, 99, 161, 229, 201, 175, 93, 149, 163, 156, 21, 78, 120, 133, 100, 42, 203, 202, 185, 219, 202, 193, 60, 134, 198, 61, 54, 252, 197, 160, 31, 146, 16, 20, 14, 35, 25, 231, 19, 72, 188, 123, 1, 189, 123, 135, 163, 119, 126, 235, 187, 158, 8, 15, 211, 140, 100, 204, 16, 223, 211, 13, 250, 45, 93, 22, 84, 160, 51, 142, 10, 134, 19, 60, 14, 229 }, new byte[] { 233, 183, 100, 16, 194, 9, 25, 105, 206, 226, 211, 6, 236, 81, 128, 214, 97, 82, 229, 5, 150, 232, 107, 57, 249, 106, 20, 146, 85, 150, 63, 48, 209, 165, 204, 90, 163, 186, 203, 138, 19, 16, 61, 76, 89, 42, 251, 109, 81, 43, 64, 252, 204, 164, 139, 222, 28, 136, 47, 132, 51, 95, 33, 106 }, false },
                    { 7, "Developer", "Pervin36@yahoo.com", "Pervin", "Elmastaşoğlu", new byte[] { 191, 152, 81, 208, 77, 245, 143, 249, 238, 247, 183, 125, 158, 105, 76, 129, 16, 207, 2, 79, 168, 24, 115, 251, 209, 177, 113, 136, 216, 109, 207, 226, 115, 61, 89, 113, 234, 147, 226, 98, 130, 244, 13, 210, 215, 134, 126, 134, 166, 204, 246, 141, 57, 99, 161, 229, 201, 175, 93, 149, 163, 156, 21, 78, 120, 133, 100, 42, 203, 202, 185, 219, 202, 193, 60, 134, 198, 61, 54, 252, 197, 160, 31, 146, 16, 20, 14, 35, 25, 231, 19, 72, 188, 123, 1, 189, 123, 135, 163, 119, 126, 235, 187, 158, 8, 15, 211, 140, 100, 204, 16, 223, 211, 13, 250, 45, 93, 22, 84, 160, 51, 142, 10, 134, 19, 60, 14, 229 }, new byte[] { 233, 183, 100, 16, 194, 9, 25, 105, 206, 226, 211, 6, 236, 81, 128, 214, 97, 82, 229, 5, 150, 232, 107, 57, 249, 106, 20, 146, 85, 150, 63, 48, 209, 165, 204, 90, 163, 186, 203, 138, 19, 16, 61, 76, 89, 42, 251, 109, 81, 43, 64, 252, 204, 164, 139, 222, 28, 136, 47, 132, 51, 95, 33, 106 }, true },
                    { 8, "Developer", "Safi.Kaplangi11@gmail.com", "Şâfi", "Kaplangı", new byte[] { 191, 152, 81, 208, 77, 245, 143, 249, 238, 247, 183, 125, 158, 105, 76, 129, 16, 207, 2, 79, 168, 24, 115, 251, 209, 177, 113, 136, 216, 109, 207, 226, 115, 61, 89, 113, 234, 147, 226, 98, 130, 244, 13, 210, 215, 134, 126, 134, 166, 204, 246, 141, 57, 99, 161, 229, 201, 175, 93, 149, 163, 156, 21, 78, 120, 133, 100, 42, 203, 202, 185, 219, 202, 193, 60, 134, 198, 61, 54, 252, 197, 160, 31, 146, 16, 20, 14, 35, 25, 231, 19, 72, 188, 123, 1, 189, 123, 135, 163, 119, 126, 235, 187, 158, 8, 15, 211, 140, 100, 204, 16, 223, 211, 13, 250, 45, 93, 22, 84, 160, 51, 142, 10, 134, 19, 60, 14, 229 }, new byte[] { 233, 183, 100, 16, 194, 9, 25, 105, 206, 226, 211, 6, 236, 81, 128, 214, 97, 82, 229, 5, 150, 232, 107, 57, 249, 106, 20, 146, 85, 150, 63, 48, 209, 165, 204, 90, 163, 186, 203, 138, 19, 16, 61, 76, 89, 42, 251, 109, 81, 43, 64, 252, 204, 164, 139, 222, 28, 136, 47, 132, 51, 95, 33, 106 }, true },
                    { 9, "Developer", "Belemir_Elmastasoglu@yahoo.com", "Belemir", "Elmastaşoğlu", new byte[] { 191, 152, 81, 208, 77, 245, 143, 249, 238, 247, 183, 125, 158, 105, 76, 129, 16, 207, 2, 79, 168, 24, 115, 251, 209, 177, 113, 136, 216, 109, 207, 226, 115, 61, 89, 113, 234, 147, 226, 98, 130, 244, 13, 210, 215, 134, 126, 134, 166, 204, 246, 141, 57, 99, 161, 229, 201, 175, 93, 149, 163, 156, 21, 78, 120, 133, 100, 42, 203, 202, 185, 219, 202, 193, 60, 134, 198, 61, 54, 252, 197, 160, 31, 146, 16, 20, 14, 35, 25, 231, 19, 72, 188, 123, 1, 189, 123, 135, 163, 119, 126, 235, 187, 158, 8, 15, 211, 140, 100, 204, 16, 223, 211, 13, 250, 45, 93, 22, 84, 160, 51, 142, 10, 134, 19, 60, 14, 229 }, new byte[] { 233, 183, 100, 16, 194, 9, 25, 105, 206, 226, 211, 6, 236, 81, 128, 214, 97, 82, 229, 5, 150, 232, 107, 57, 249, 106, 20, 146, 85, 150, 63, 48, 209, 165, 204, 90, 163, 186, 203, 138, 19, 16, 61, 76, 89, 42, 251, 109, 81, 43, 64, 252, 204, 164, 139, 222, 28, 136, 47, 132, 51, 95, 33, 106 }, true },
                    { 10, "Developer", "Elif43@gmail.com", "Elif", "Atan", new byte[] { 191, 152, 81, 208, 77, 245, 143, 249, 238, 247, 183, 125, 158, 105, 76, 129, 16, 207, 2, 79, 168, 24, 115, 251, 209, 177, 113, 136, 216, 109, 207, 226, 115, 61, 89, 113, 234, 147, 226, 98, 130, 244, 13, 210, 215, 134, 126, 134, 166, 204, 246, 141, 57, 99, 161, 229, 201, 175, 93, 149, 163, 156, 21, 78, 120, 133, 100, 42, 203, 202, 185, 219, 202, 193, 60, 134, 198, 61, 54, 252, 197, 160, 31, 146, 16, 20, 14, 35, 25, 231, 19, 72, 188, 123, 1, 189, 123, 135, 163, 119, 126, 235, 187, 158, 8, 15, 211, 140, 100, 204, 16, 223, 211, 13, 250, 45, 93, 22, 84, 160, 51, 142, 10, 134, 19, 60, 14, 229 }, new byte[] { 233, 183, 100, 16, 194, 9, 25, 105, 206, 226, 211, 6, 236, 81, 128, 214, 97, 82, 229, 5, 150, 232, 107, 57, 249, 106, 20, 146, 85, 150, 63, 48, 209, 165, 204, 90, 163, 186, 203, 138, 19, 16, 61, 76, 89, 42, 251, 109, 81, 43, 64, 252, 204, 164, 139, 222, 28, 136, 47, 132, 51, 95, 33, 106 }, false }
                });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 1);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 2);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 3);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 4);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 5);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 6);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 7);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 8);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 9);

            migrationBuilder.DeleteData(
                table: "User",
                keyColumn: "Id",
                keyValue: 10);

            migrationBuilder.InsertData(
                table: "User",
                columns: new[] { "Id", "Discriminator", "Email", "FirstName", "LastName", "PasswordHash", "PasswordSalt", "Status" },
                values: new object[,]
                {
                    { 1, "User", "Muaviye36@hotmail.com", "Muaviye", "Aykaç", new byte[] { 225, 59, 5, 52, 164, 229, 161, 36, 107, 158, 118, 159, 197, 238, 106, 246, 135, 92, 40, 126, 7, 247, 13, 100, 0, 196, 127, 120, 114, 230, 187, 85, 99, 45, 88, 49, 79, 52, 228, 219, 41, 249, 10, 254, 13, 21, 186, 142, 85, 26, 91, 171, 126, 230, 71, 191, 171, 48, 5, 29, 65, 241, 253, 47, 89, 129, 21, 136, 202, 68, 71, 189, 106, 252, 35, 126, 139, 123, 245, 246, 164, 207, 120, 215, 19, 60, 129, 173, 45, 96, 11, 191, 225, 239, 3, 174, 151, 194, 74, 228, 75, 128, 194, 31, 145, 175, 163, 2, 54, 75, 195, 183, 67, 27, 34, 201, 162, 33, 177, 185, 4, 136, 17, 115, 135, 163, 168, 141 }, new byte[] { 18, 176, 223, 80, 119, 5, 74, 215, 7, 145, 46, 139, 36, 21, 215, 58, 3, 49, 164, 198, 14, 246, 231, 100, 84, 136, 230, 62, 213, 69, 214, 11, 100, 217, 140, 101, 235, 197, 143, 93, 13, 55, 32, 222, 208, 46, 209, 105, 199, 245, 85, 35, 120, 166, 191, 109, 162, 156, 55, 222, 116, 46, 190, 219 }, true },
                    { 2, "User", "Oksan.Tekand74@yahoo.com", "Okşan", "Tekand", new byte[] { 225, 59, 5, 52, 164, 229, 161, 36, 107, 158, 118, 159, 197, 238, 106, 246, 135, 92, 40, 126, 7, 247, 13, 100, 0, 196, 127, 120, 114, 230, 187, 85, 99, 45, 88, 49, 79, 52, 228, 219, 41, 249, 10, 254, 13, 21, 186, 142, 85, 26, 91, 171, 126, 230, 71, 191, 171, 48, 5, 29, 65, 241, 253, 47, 89, 129, 21, 136, 202, 68, 71, 189, 106, 252, 35, 126, 139, 123, 245, 246, 164, 207, 120, 215, 19, 60, 129, 173, 45, 96, 11, 191, 225, 239, 3, 174, 151, 194, 74, 228, 75, 128, 194, 31, 145, 175, 163, 2, 54, 75, 195, 183, 67, 27, 34, 201, 162, 33, 177, 185, 4, 136, 17, 115, 135, 163, 168, 141 }, new byte[] { 18, 176, 223, 80, 119, 5, 74, 215, 7, 145, 46, 139, 36, 21, 215, 58, 3, 49, 164, 198, 14, 246, 231, 100, 84, 136, 230, 62, 213, 69, 214, 11, 100, 217, 140, 101, 235, 197, 143, 93, 13, 55, 32, 222, 208, 46, 209, 105, 199, 245, 85, 35, 120, 166, 191, 109, 162, 156, 55, 222, 116, 46, 190, 219 }, false },
                    { 3, "User", "Bora_Hakyemez80@gmail.com", "Bora", "Hakyemez", new byte[] { 225, 59, 5, 52, 164, 229, 161, 36, 107, 158, 118, 159, 197, 238, 106, 246, 135, 92, 40, 126, 7, 247, 13, 100, 0, 196, 127, 120, 114, 230, 187, 85, 99, 45, 88, 49, 79, 52, 228, 219, 41, 249, 10, 254, 13, 21, 186, 142, 85, 26, 91, 171, 126, 230, 71, 191, 171, 48, 5, 29, 65, 241, 253, 47, 89, 129, 21, 136, 202, 68, 71, 189, 106, 252, 35, 126, 139, 123, 245, 246, 164, 207, 120, 215, 19, 60, 129, 173, 45, 96, 11, 191, 225, 239, 3, 174, 151, 194, 74, 228, 75, 128, 194, 31, 145, 175, 163, 2, 54, 75, 195, 183, 67, 27, 34, 201, 162, 33, 177, 185, 4, 136, 17, 115, 135, 163, 168, 141 }, new byte[] { 18, 176, 223, 80, 119, 5, 74, 215, 7, 145, 46, 139, 36, 21, 215, 58, 3, 49, 164, 198, 14, 246, 231, 100, 84, 136, 230, 62, 213, 69, 214, 11, 100, 217, 140, 101, 235, 197, 143, 93, 13, 55, 32, 222, 208, 46, 209, 105, 199, 245, 85, 35, 120, 166, 191, 109, 162, 156, 55, 222, 116, 46, 190, 219 }, true },
                    { 4, "User", "Tayfun.Berberoglu16@yahoo.com", "Tayfun", "Berberoğlu", new byte[] { 225, 59, 5, 52, 164, 229, 161, 36, 107, 158, 118, 159, 197, 238, 106, 246, 135, 92, 40, 126, 7, 247, 13, 100, 0, 196, 127, 120, 114, 230, 187, 85, 99, 45, 88, 49, 79, 52, 228, 219, 41, 249, 10, 254, 13, 21, 186, 142, 85, 26, 91, 171, 126, 230, 71, 191, 171, 48, 5, 29, 65, 241, 253, 47, 89, 129, 21, 136, 202, 68, 71, 189, 106, 252, 35, 126, 139, 123, 245, 246, 164, 207, 120, 215, 19, 60, 129, 173, 45, 96, 11, 191, 225, 239, 3, 174, 151, 194, 74, 228, 75, 128, 194, 31, 145, 175, 163, 2, 54, 75, 195, 183, 67, 27, 34, 201, 162, 33, 177, 185, 4, 136, 17, 115, 135, 163, 168, 141 }, new byte[] { 18, 176, 223, 80, 119, 5, 74, 215, 7, 145, 46, 139, 36, 21, 215, 58, 3, 49, 164, 198, 14, 246, 231, 100, 84, 136, 230, 62, 213, 69, 214, 11, 100, 217, 140, 101, 235, 197, 143, 93, 13, 55, 32, 222, 208, 46, 209, 105, 199, 245, 85, 35, 120, 166, 191, 109, 162, 156, 55, 222, 116, 46, 190, 219 }, true },
                    { 5, "User", "Veysel43@gmail.com", "Veysel", "Günday", new byte[] { 225, 59, 5, 52, 164, 229, 161, 36, 107, 158, 118, 159, 197, 238, 106, 246, 135, 92, 40, 126, 7, 247, 13, 100, 0, 196, 127, 120, 114, 230, 187, 85, 99, 45, 88, 49, 79, 52, 228, 219, 41, 249, 10, 254, 13, 21, 186, 142, 85, 26, 91, 171, 126, 230, 71, 191, 171, 48, 5, 29, 65, 241, 253, 47, 89, 129, 21, 136, 202, 68, 71, 189, 106, 252, 35, 126, 139, 123, 245, 246, 164, 207, 120, 215, 19, 60, 129, 173, 45, 96, 11, 191, 225, 239, 3, 174, 151, 194, 74, 228, 75, 128, 194, 31, 145, 175, 163, 2, 54, 75, 195, 183, 67, 27, 34, 201, 162, 33, 177, 185, 4, 136, 17, 115, 135, 163, 168, 141 }, new byte[] { 18, 176, 223, 80, 119, 5, 74, 215, 7, 145, 46, 139, 36, 21, 215, 58, 3, 49, 164, 198, 14, 246, 231, 100, 84, 136, 230, 62, 213, 69, 214, 11, 100, 217, 140, 101, 235, 197, 143, 93, 13, 55, 32, 222, 208, 46, 209, 105, 199, 245, 85, 35, 120, 166, 191, 109, 162, 156, 55, 222, 116, 46, 190, 219 }, false },
                    { 6, "User", "Misbah_Erturk@gmail.com", "Misbah", "Ertürk", new byte[] { 225, 59, 5, 52, 164, 229, 161, 36, 107, 158, 118, 159, 197, 238, 106, 246, 135, 92, 40, 126, 7, 247, 13, 100, 0, 196, 127, 120, 114, 230, 187, 85, 99, 45, 88, 49, 79, 52, 228, 219, 41, 249, 10, 254, 13, 21, 186, 142, 85, 26, 91, 171, 126, 230, 71, 191, 171, 48, 5, 29, 65, 241, 253, 47, 89, 129, 21, 136, 202, 68, 71, 189, 106, 252, 35, 126, 139, 123, 245, 246, 164, 207, 120, 215, 19, 60, 129, 173, 45, 96, 11, 191, 225, 239, 3, 174, 151, 194, 74, 228, 75, 128, 194, 31, 145, 175, 163, 2, 54, 75, 195, 183, 67, 27, 34, 201, 162, 33, 177, 185, 4, 136, 17, 115, 135, 163, 168, 141 }, new byte[] { 18, 176, 223, 80, 119, 5, 74, 215, 7, 145, 46, 139, 36, 21, 215, 58, 3, 49, 164, 198, 14, 246, 231, 100, 84, 136, 230, 62, 213, 69, 214, 11, 100, 217, 140, 101, 235, 197, 143, 93, 13, 55, 32, 222, 208, 46, 209, 105, 199, 245, 85, 35, 120, 166, 191, 109, 162, 156, 55, 222, 116, 46, 190, 219 }, false },
                    { 7, "User", "Yeliz_Limoncuoglu55@gmail.com", "Yeliz", "Limoncuoğlu", new byte[] { 225, 59, 5, 52, 164, 229, 161, 36, 107, 158, 118, 159, 197, 238, 106, 246, 135, 92, 40, 126, 7, 247, 13, 100, 0, 196, 127, 120, 114, 230, 187, 85, 99, 45, 88, 49, 79, 52, 228, 219, 41, 249, 10, 254, 13, 21, 186, 142, 85, 26, 91, 171, 126, 230, 71, 191, 171, 48, 5, 29, 65, 241, 253, 47, 89, 129, 21, 136, 202, 68, 71, 189, 106, 252, 35, 126, 139, 123, 245, 246, 164, 207, 120, 215, 19, 60, 129, 173, 45, 96, 11, 191, 225, 239, 3, 174, 151, 194, 74, 228, 75, 128, 194, 31, 145, 175, 163, 2, 54, 75, 195, 183, 67, 27, 34, 201, 162, 33, 177, 185, 4, 136, 17, 115, 135, 163, 168, 141 }, new byte[] { 18, 176, 223, 80, 119, 5, 74, 215, 7, 145, 46, 139, 36, 21, 215, 58, 3, 49, 164, 198, 14, 246, 231, 100, 84, 136, 230, 62, 213, 69, 214, 11, 100, 217, 140, 101, 235, 197, 143, 93, 13, 55, 32, 222, 208, 46, 209, 105, 199, 245, 85, 35, 120, 166, 191, 109, 162, 156, 55, 222, 116, 46, 190, 219 }, true },
                    { 8, "User", "Muhammed_Arican87@yahoo.com", "Muhammed", "Arıcan", new byte[] { 225, 59, 5, 52, 164, 229, 161, 36, 107, 158, 118, 159, 197, 238, 106, 246, 135, 92, 40, 126, 7, 247, 13, 100, 0, 196, 127, 120, 114, 230, 187, 85, 99, 45, 88, 49, 79, 52, 228, 219, 41, 249, 10, 254, 13, 21, 186, 142, 85, 26, 91, 171, 126, 230, 71, 191, 171, 48, 5, 29, 65, 241, 253, 47, 89, 129, 21, 136, 202, 68, 71, 189, 106, 252, 35, 126, 139, 123, 245, 246, 164, 207, 120, 215, 19, 60, 129, 173, 45, 96, 11, 191, 225, 239, 3, 174, 151, 194, 74, 228, 75, 128, 194, 31, 145, 175, 163, 2, 54, 75, 195, 183, 67, 27, 34, 201, 162, 33, 177, 185, 4, 136, 17, 115, 135, 163, 168, 141 }, new byte[] { 18, 176, 223, 80, 119, 5, 74, 215, 7, 145, 46, 139, 36, 21, 215, 58, 3, 49, 164, 198, 14, 246, 231, 100, 84, 136, 230, 62, 213, 69, 214, 11, 100, 217, 140, 101, 235, 197, 143, 93, 13, 55, 32, 222, 208, 46, 209, 105, 199, 245, 85, 35, 120, 166, 191, 109, 162, 156, 55, 222, 116, 46, 190, 219 }, false },
                    { 9, "User", "Kamil_Ozbir@hotmail.com", "Kâmil", "Özbir", new byte[] { 225, 59, 5, 52, 164, 229, 161, 36, 107, 158, 118, 159, 197, 238, 106, 246, 135, 92, 40, 126, 7, 247, 13, 100, 0, 196, 127, 120, 114, 230, 187, 85, 99, 45, 88, 49, 79, 52, 228, 219, 41, 249, 10, 254, 13, 21, 186, 142, 85, 26, 91, 171, 126, 230, 71, 191, 171, 48, 5, 29, 65, 241, 253, 47, 89, 129, 21, 136, 202, 68, 71, 189, 106, 252, 35, 126, 139, 123, 245, 246, 164, 207, 120, 215, 19, 60, 129, 173, 45, 96, 11, 191, 225, 239, 3, 174, 151, 194, 74, 228, 75, 128, 194, 31, 145, 175, 163, 2, 54, 75, 195, 183, 67, 27, 34, 201, 162, 33, 177, 185, 4, 136, 17, 115, 135, 163, 168, 141 }, new byte[] { 18, 176, 223, 80, 119, 5, 74, 215, 7, 145, 46, 139, 36, 21, 215, 58, 3, 49, 164, 198, 14, 246, 231, 100, 84, 136, 230, 62, 213, 69, 214, 11, 100, 217, 140, 101, 235, 197, 143, 93, 13, 55, 32, 222, 208, 46, 209, 105, 199, 245, 85, 35, 120, 166, 191, 109, 162, 156, 55, 222, 116, 46, 190, 219 }, false },
                    { 10, "User", "Defne.Ozberk27@hotmail.com", "Defne", "Özberk", new byte[] { 225, 59, 5, 52, 164, 229, 161, 36, 107, 158, 118, 159, 197, 238, 106, 246, 135, 92, 40, 126, 7, 247, 13, 100, 0, 196, 127, 120, 114, 230, 187, 85, 99, 45, 88, 49, 79, 52, 228, 219, 41, 249, 10, 254, 13, 21, 186, 142, 85, 26, 91, 171, 126, 230, 71, 191, 171, 48, 5, 29, 65, 241, 253, 47, 89, 129, 21, 136, 202, 68, 71, 189, 106, 252, 35, 126, 139, 123, 245, 246, 164, 207, 120, 215, 19, 60, 129, 173, 45, 96, 11, 191, 225, 239, 3, 174, 151, 194, 74, 228, 75, 128, 194, 31, 145, 175, 163, 2, 54, 75, 195, 183, 67, 27, 34, 201, 162, 33, 177, 185, 4, 136, 17, 115, 135, 163, 168, 141 }, new byte[] { 18, 176, 223, 80, 119, 5, 74, 215, 7, 145, 46, 139, 36, 21, 215, 58, 3, 49, 164, 198, 14, 246, 231, 100, 84, 136, 230, 62, 213, 69, 214, 11, 100, 217, 140, 101, 235, 197, 143, 93, 13, 55, 32, 222, 208, 46, 209, 105, 199, 245, 85, 35, 120, 166, 191, 109, 162, 156, 55, 222, 116, 46, 190, 219 }, false }
                });
        }
    }
}
